[pytest]
# Test discovery and execution settings
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output settings
addopts = 
    # Show test summary
    -ra
    # Show local variables in tracebacks
    --showlocals
    # Generate coverage report
    --cov=resource_requirements_parser
    # Show missing lines in coverage
    --cov-report=term-missing
    # Generate HTML coverage report
    --cov-report=html:coverage_html
    # Fail if coverage is below 80%
    --cov-fail-under=80
    # Show warnings
    -W error
    # Verbose output
    -v

# Coverage settings
[coverage:run]
source = resource_requirements_parser
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:

[coverage:html]
directory = coverage_html

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Tests that take longer to run
    terraform: Tests for Terraform parser
    cloudformation: Tests for CloudFormation parser

# Environment variables for tests
env =
    PYTHONPATH = {toxinidir}/src
    PYTHONWARNINGS = error
    COVERAGE_FILE = .coverage

# Logging settings
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S
