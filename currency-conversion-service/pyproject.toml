[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "currency-conversion-service"
version = "0.1.0"
description = "A service for handling currency conversions and exchange rates for cloud cost data"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["currency", "conversion", "exchange", "rates", "finops", "cloud"]
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "forex-python>=1.8",           # Currency exchange rates
    "py-money>=0.5.0",            # Money and currency handling
    "requests>=2.28.0",           # HTTP client
    "pydantic>=2.0.0",           # Data validation
    "httpx>=0.23.0",             # Async HTTP client
    "tenacity>=8.0.1",           # Retry handling
    "pandas>=1.5.0",             # Data manipulation
    "pytz>=2022.1",              # Timezone handling
    "python-dateutil>=2.8.2",    # Date utilities
    "aiohttp>=3.8.0",            # Async HTTP client
    "redis>=4.5.0",              # Caching
    "fastapi>=0.95.0",           # API framework
    "uvicorn>=0.21.0",           # ASGI server
    "sqlalchemy>=2.0.0",         # Database ORM
    "alembic>=1.11.0",          # Database migrations
    "psycopg2-binary>=2.9.0",   # PostgreSQL adapter
    "prometheus-client>=0.16.0", # Metrics
    "opentelemetry-api>=1.18.0", # Telemetry
    "opentelemetry-sdk>=1.18.0", # Telemetry
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "pylint>=2.15.0",
    "pytest-recording>=0.12.0",  # For recording API responses
    "vcrpy>=4.2.0",             # HTTP interaction recording
    "docker>=6.1.0",            # For integration tests
    "locust>=2.15.0",           # Load testing
]

[project.scripts]
currencyservice = "currency_conversion.cli:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q --cov=src"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pylint.messages_control]
disable = ["C0111", "C0103"]

[tool.pylint.format]
max-line-length = 88
