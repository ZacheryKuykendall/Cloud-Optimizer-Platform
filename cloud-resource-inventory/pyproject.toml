[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cloud-resource-inventory"
version = "0.1.0"
description = "A Python library for tracking and managing cloud resources across multiple cloud providers"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = [
    "cloud",
    "aws",
    "azure",
    "gcp",
    "inventory",
    "resource-management",
    "cloud-native",
    "devops",
    "infrastructure"
]
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Operating System :: OS Independent",
    "Typing :: Typed"
]
dependencies = [
    "pydantic>=2.0.0",
    "boto3>=1.26.0",
    "azure-mgmt-resource>=21.0.0",
    "azure-identity>=1.12.0",
    "google-cloud-resource-manager>=1.0.0",
    "google-auth>=2.22.0",
    "aiohttp>=3.8.0",
    "rich>=13.0.0",
    "typing-extensions>=4.7.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.4.0",
    "pylint>=2.17.0",
    "types-boto3>=1.0.0",
    "types-aiohttp>=3.0.0"
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.24.0"
]

[project.urls]
Homepage = "https://github.com/yourusername/cloud-resource-inventory"
Documentation = "https://cloud-resource-inventory.readthedocs.io/"
Repository = "https://github.com/yourusername/cloud-resource-inventory.git"
"Bug Tracker" = "https://github.com/yourusername/cloud-resource-inventory/issues"
Changelog = "https://github.com/yourusername/cloud-resource-inventory/blob/main/CHANGELOG.md"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
known_first_party = ["cloud_resource_inventory"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=src --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::UserWarning"
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py"
]

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0621",  # redefined-outer-name
    "W0511",  # fixme
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.basic]
good-names = ["id", "i", "j", "k", "ex", "Run", "_"]

[tool.pylint.design]
max-args = 8
max-attributes = 12
